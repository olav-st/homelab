controllers:
  pingvinshare:
    strategy: Recreate

    initContainers:
      config-processor:
        image:
          repository: alpine
          tag: 3.22 # renovate: docker=alpine
        command:
          - sh
          - -c
          - |
            apk add --no-cache gettext
            echo "Processing config file..."
            envsubst < /config-template/config.yaml > /config/config.yaml
            echo "Config file processed successfully"
        env:
          OIDC_CLIENT_SECRET:
            valueFrom:
              secretKeyRef:
                name: pingvinshare-oidc-credentials
                key: clientSecret

    containers:
      app:
        image:
          repository: ghcr.io/stonith404/pingvin-share
          tag: v1.13.0 # renovate: github-releases=stonith404/pingvinshare
        env:
          TRUST_PROXY: true
        probes:
          liveness:
            enabled: true
          readiness:
            enabled: true
          startup:
            enabled: true
            spec:
              failureThreshold: 30
              periodSeconds: 5
        resources:
          requests:
            cpu: 5m
            memory: 256Mi
          limits:
            memory: 512Mi

persistence:
  data:
    existingClaim: pingvinshare
  config-template:
    type: configMap
    name: pingvinshare-config
    advancedMounts:
      pingvinshare:
        config-processor:
          - path: /config-template
            readOnly: true
  config:
    type: emptyDir
    advancedMounts:
      pingvinshare:
        config-processor:
          - path: /config
        app:
          - path: /opt/app/config.yaml
            subPath: config.yaml

service:
  app:
    controller: pingvinshare
    ports:
      http:
        port: 3000

ingress:
  app:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      hajimari.io/enable: 'true'
      hajimari.io/appName: 'Pingvin Share'
      hajimari.io/icon: https://user-images.githubusercontent.com/58886915/166198400-c2134044-1198-4647-a8b6-da9c4a204c68.svg
    hosts:
      - host: &hostName pingvin.homelab.olav.ninja
        paths:
          - path: /
            service:
              identifier: app
              port: http
    tls:
      - hosts:
          - *hostName
        secretName: pingvinshare-tls-certificate